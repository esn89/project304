/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package my.JavaApplication2;

import javax.swing.JOptionPane;
import javax.swing.JPasswordField;

/**
 *
 * @author ep
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupClerk = new javax.swing.ButtonGroup();
        buttonGroupCustomer = new javax.swing.ButtonGroup();
        buttonGroupManager = new javax.swing.ButtonGroup();
        bigPane = new javax.swing.JTabbedPane();
        clerk = new javax.swing.JPanel();
        processPurchase = new javax.swing.JRadioButton();
        processReturn = new javax.swing.JRadioButton();
        Purchase = new javax.swing.JPanel();
        itemInput = new javax.swing.JPanel();
        addToCart = new javax.swing.JButton();
        deletePrevious = new javax.swing.JButton();
        enterItemUPC = new javax.swing.JTextField();
        enterItemQuan = new javax.swing.JTextField();
        itemUPC = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cancelOrder1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        paymentType = new javax.swing.JLabel();
        cashOrCard = new javax.swing.JComboBox();
        fieldForCC = new javax.swing.JTextField();
        ccNumber = new javax.swing.JLabel();
        expiryDate = new javax.swing.JLabel();
        fieldforExpiryDate = new javax.swing.JTextField();
        cancelOrder = new javax.swing.JButton();
        completePurchase = new javax.swing.JButton();
        totalLabel = new javax.swing.JLabel();
        total = new javax.swing.JTextField();
        Return = new javax.swing.JPanel();
        enterReceiptID = new javax.swing.JLabel();
        fieldForReceiptID = new javax.swing.JTextField();
        issueRefund = new javax.swing.JButton();
        checkReceipt = new javax.swing.JButton();
        isValid = new javax.swing.JTextField();
        returnItemUPC = new javax.swing.JLabel();
        returnIUPCField = new javax.swing.JTextField();
        returnQuantity = new javax.swing.JLabel();
        returnQuanField = new javax.swing.JTextField();
        isSuccessRet = new javax.swing.JTextField();
        customer = new javax.swing.JPanel();
        registration = new javax.swing.JRadioButton();
        purchaseOnline = new javax.swing.JRadioButton();
        registrationPanel = new javax.swing.JPanel();
        name = new javax.swing.JLabel();
        address = new javax.swing.JLabel();
        id = new javax.swing.JLabel();
        phone = new javax.swing.JLabel();
        password = new javax.swing.JLabel();
        createButton = new javax.swing.JButton();
        cusPassword = new javax.swing.JTextField();
        cusID = new javax.swing.JTextField();
        cusName = new javax.swing.JTextField();
        cusAddress = new javax.swing.JTextField();
        cusPhone = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        manager = new javax.swing.JPanel();
        addItem = new javax.swing.JRadioButton();
        processDelivery = new javax.swing.JRadioButton();
        dailySalesReport = new javax.swing.JRadioButton();
        topSellingItems = new javax.swing.JRadioButton();
        managerPanel = new javax.swing.JPanel();
        mngrItemUPC = new javax.swing.JLabel();
        mngrQuant = new javax.swing.JLabel();
        mngrPrice = new javax.swing.JLabel();
        addToInventory = new javax.swing.JButton();
        priceInput = new javax.swing.JTextField();
        itemUPCInput = new javax.swing.JTextField();
        quantityInput = new javax.swing.JTextField();
        processDeliPanel = new javax.swing.JPanel();
        processDaySpinner = new javax.swing.JSpinner();
        processMonthSpinner = new javax.swing.JSpinner();
        processDay = new javax.swing.JLabel();
        procesMonth = new javax.swing.JLabel();
        processOrderID = new javax.swing.JLabel();
        orderID = new javax.swing.JTextField();
        processButton = new javax.swing.JButton();
        dsReportPanel = new javax.swing.JPanel();
        dsrDate = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        dsrDisplay = new javax.swing.JTextArea();
        dsrDateField = new javax.swing.JTextField();
        dsrButton = new javax.swing.JButton();
        tsiPanel = new javax.swing.JPanel();
        tsiDate = new javax.swing.JLabel();
        tsiTheTop = new javax.swing.JLabel();
        tsiTheTopSpinner = new javax.swing.JSpinner();
        tsiGoButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tsiDisplay = new javax.swing.JTextArea();
        tsiDateField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonGroupClerk.add(processPurchase);
        processPurchase.setText("Process a Purchase");

        buttonGroupClerk.add(processReturn);
        processReturn.setText("Process a Return");
        processReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processReturnActionPerformed(evt);
            }
        });

        Purchase.setBorder(javax.swing.BorderFactory.createTitledBorder("Purchase"));
        Purchase.setName(""); // NOI18N

        itemInput.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Items:"));
        itemInput.setToolTipText("");

        addToCart.setText("Add To Cart");
        addToCart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addToCartMouseClicked(evt);
            }
        });

        deletePrevious.setText("Delete Previous");
        deletePrevious.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletePreviousMouseClicked(evt);
            }
        });

        enterItemUPC.setToolTipText("Enter Item UPC");

        enterItemQuan.setToolTipText("Enter Quantity");

        itemUPC.setText("Item UPC:");

        jLabel2.setText("Quantity:");

        cancelOrder1.setText("Cancel Order");
        cancelOrder1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelOrder1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout itemInputLayout = new javax.swing.GroupLayout(itemInput);
        itemInput.setLayout(itemInputLayout);
        itemInputLayout.setHorizontalGroup(
            itemInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(itemInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(itemUPC, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(itemInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(itemInputLayout.createSequentialGroup()
                        .addComponent(addToCart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addComponent(deletePrevious)
                        .addGap(18, 18, 18)
                        .addComponent(cancelOrder1)
                        .addGap(27, 27, 27))
                    .addGroup(itemInputLayout.createSequentialGroup()
                        .addGroup(itemInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enterItemQuan, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(enterItemUPC, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        itemInputLayout.setVerticalGroup(
            itemInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, itemInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(itemInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterItemUPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemUPC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(itemInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterItemQuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(itemInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deletePrevious)
                    .addComponent(addToCart)
                    .addComponent(cancelOrder1))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Payment Method"));
        jPanel2.setToolTipText("Process Payment");

        paymentType.setText("Payment Type:");

        cashOrCard.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "Credit Card" }));
        cashOrCard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cashOrCardMouseClicked(evt);
            }
        });
        cashOrCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashOrCardActionPerformed(evt);
            }
        });

        fieldForCC.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        ccNumber.setText("Credit Card # :");

        expiryDate.setText("Expiry Date:");

        cancelOrder.setText("Cancel Order");
        cancelOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelOrderMouseClicked(evt);
            }
        });
        

        completePurchase.setText("Complete Purchase");
        completePurchase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                completePurchaseMouseClicked(evt);
            }
        });

        totalLabel.setText("Total:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(paymentType)
                    .addComponent(totalLabel))
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cashOrCard, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(total))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ccNumber)
                            .addComponent(expiryDate)))
                    .addComponent(cancelOrder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fieldForCC)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(completePurchase)
                            .addComponent(fieldforExpiryDate, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 32, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paymentType)
                    .addComponent(cashOrCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldForCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ccNumber))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fieldforExpiryDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(expiryDate)
                        .addComponent(totalLabel)
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelOrder)
                    .addComponent(completePurchase))
                .addContainerGap())
        );

        javax.swing.GroupLayout PurchaseLayout = new javax.swing.GroupLayout(Purchase);
        Purchase.setLayout(PurchaseLayout);
        PurchaseLayout.setHorizontalGroup(
            PurchaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PurchaseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PurchaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        PurchaseLayout.setVerticalGroup(
            PurchaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PurchaseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(itemInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        Return.setBorder(javax.swing.BorderFactory.createTitledBorder("Return"));

        enterReceiptID.setText("Enter Receipt ID:");

        issueRefund.setText("Issue Refund");
        issueRefund.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                issueRefundMouseClicked(evt);
            }
        });

        checkReceipt.setText("Check Receipt");
        checkReceipt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkReceiptMouseClicked(evt);
            }
        });

        returnItemUPC.setText("Item UPC:");

        returnQuantity.setText("Quantity:");

        returnQuanField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnQuanFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ReturnLayout = new javax.swing.GroupLayout(Return);
        Return.setLayout(ReturnLayout);
        ReturnLayout.setHorizontalGroup(
            ReturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReturnLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(ReturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enterReceiptID)
                    .addComponent(returnItemUPC))
                .addGap(34, 34, 34)
                .addGroup(ReturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ReturnLayout.createSequentialGroup()
                        .addGroup(ReturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fieldForReceiptID, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(returnIUPCField, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(ReturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkReceipt)
                            .addComponent(returnQuantity))
                        .addGap(42, 42, 42)
                        .addGroup(ReturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(isValid, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(returnQuanField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ReturnLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(issueRefund)
                        .addGap(85, 85, 85)
                        .addComponent(isSuccessRet, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ReturnLayout.setVerticalGroup(
            ReturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReturnLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(ReturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterReceiptID)
                    .addComponent(fieldForReceiptID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkReceipt)
                    .addComponent(isValid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ReturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returnItemUPC)
                    .addComponent(returnIUPCField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(returnQuantity)
                    .addComponent(returnQuanField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(ReturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(issueRefund)
                    .addComponent(isSuccessRet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(94, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout clerkLayout = new javax.swing.GroupLayout(clerk);
        clerk.setLayout(clerkLayout);
        clerkLayout.setHorizontalGroup(
            clerkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clerkLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(clerkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Return, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Purchase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(clerkLayout.createSequentialGroup()
                        .addGroup(clerkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(processReturn)
                            .addComponent(processPurchase))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        clerkLayout.setVerticalGroup(
            clerkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clerkLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(processPurchase)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Purchase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(processReturn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Return, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bigPane.addTab("Clerk", clerk);

        buttonGroupCustomer.add(registration);
        registration.setText("Registration");

        buttonGroupCustomer.add(purchaseOnline);
        purchaseOnline.setText("Purchase Items Online");
        purchaseOnline.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                purchaseOnlineMouseClicked(evt);
            }
        });

        registrationPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        name.setText("Name:");

        address.setText("Address:");

        id.setText("ID:");

        phone.setText("Phone:");

        password.setText("Password:");

        createButton.setText("Create!");
        createButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout registrationPanelLayout = new javax.swing.GroupLayout(registrationPanel);
        registrationPanel.setLayout(registrationPanelLayout);
        registrationPanelLayout.setHorizontalGroup(
            registrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registrationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(registrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(password)
                    .addComponent(id)
                    .addComponent(name))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cusPassword)
                    .addComponent(cusID)
                    .addComponent(cusName, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE))
                .addGap(74, 74, 74)
                .addGroup(registrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createButton)
                    .addGroup(registrationPanelLayout.createSequentialGroup()
                        .addGroup(registrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(address)
                            .addComponent(phone))
                        .addGap(59, 59, 59)
                        .addGroup(registrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cusAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cusPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        registrationPanelLayout.setVerticalGroup(
            registrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registrationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(registrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name)
                    .addComponent(address)
                    .addComponent(cusName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cusAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(87, 87, 87)
                .addGroup(registrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id)
                    .addComponent(phone)
                    .addComponent(cusID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cusPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(83, 83, 83)
                .addGroup(registrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password)
                    .addComponent(createButton)
                    .addComponent(cusPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 383, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout customerLayout = new javax.swing.GroupLayout(customer);
        customer.setLayout(customerLayout);
        customerLayout.setHorizontalGroup(
            customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerLayout.createSequentialGroup()
                .addGroup(customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(customerLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(registration)
                            .addComponent(purchaseOnline))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(customerLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(registrationPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        customerLayout.setVerticalGroup(
            customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(registration)
                .addGap(29, 29, 29)
                .addComponent(registrationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(purchaseOnline)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        bigPane.addTab("Customer", customer);

        buttonGroupManager.add(addItem);
        addItem.setText("Add items to store");

        buttonGroupManager.add(processDelivery);
        processDelivery.setText("Process Delivery");

        buttonGroupManager.add(dailySalesReport);
        dailySalesReport.setText("Daily Sales Report");

        buttonGroupManager.add(topSellingItems);
        topSellingItems.setText("Top Selling Items");

        managerPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        mngrItemUPC.setText("Item UPC:");

        mngrQuant.setText("Quantity:");

        mngrPrice.setText("Price (Optional):");

        addToInventory.setText("Add to Inventory");

        javax.swing.GroupLayout managerPanelLayout = new javax.swing.GroupLayout(managerPanel);
        managerPanel.setLayout(managerPanelLayout);
        managerPanelLayout.setHorizontalGroup(
            managerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managerPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(managerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mngrPrice)
                    .addComponent(mngrItemUPC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(managerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(priceInput, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                    .addComponent(itemUPCInput))
                .addGap(50, 50, 50)
                .addGroup(managerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addToInventory)
                    .addGroup(managerPanelLayout.createSequentialGroup()
                        .addComponent(mngrQuant)
                        .addGap(87, 87, 87)
                        .addComponent(quantityInput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managerPanelLayout.setVerticalGroup(
            managerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(managerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mngrItemUPC)
                    .addComponent(mngrQuant)
                    .addComponent(itemUPCInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(managerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mngrPrice)
                    .addComponent(addToInventory)
                    .addComponent(priceInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        processDeliPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        processDay.setText("Day:");

        procesMonth.setText("Month:");

        processOrderID.setText("Order ID:");

        processButton.setText("Process");

        javax.swing.GroupLayout processDeliPanelLayout = new javax.swing.GroupLayout(processDeliPanel);
        processDeliPanel.setLayout(processDeliPanelLayout);
        processDeliPanelLayout.setHorizontalGroup(
            processDeliPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(processDeliPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(processDeliPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(processDay)
                    .addComponent(processOrderID))
                .addGap(51, 51, 51)
                .addGroup(processDeliPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(processDeliPanelLayout.createSequentialGroup()
                        .addComponent(processDaySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(procesMonth)
                        .addGap(72, 72, 72)
                        .addComponent(processMonthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(processDeliPanelLayout.createSequentialGroup()
                        .addComponent(orderID, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(109, 109, 109)
                        .addComponent(processButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        processDeliPanelLayout.setVerticalGroup(
            processDeliPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(processDeliPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(processDeliPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(processDaySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(processMonthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(processDay)
                    .addComponent(procesMonth))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(processDeliPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(processOrderID)
                    .addComponent(orderID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(processButton))
                .addGap(20, 20, 20))
        );

        dsReportPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        dsrDate.setText("DD-MM-YYYY:");

        dsrDisplay.setColumns(20);
        dsrDisplay.setRows(5);
        jScrollPane2.setViewportView(dsrDisplay);

        dsrButton.setText("jButton2");

        javax.swing.GroupLayout dsReportPanelLayout = new javax.swing.GroupLayout(dsReportPanel);
        dsReportPanel.setLayout(dsReportPanelLayout);
        dsReportPanelLayout.setHorizontalGroup(
            dsReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dsReportPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dsReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dsReportPanelLayout.createSequentialGroup()
                        .addComponent(dsrDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dsrDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dsrButton)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        dsReportPanelLayout.setVerticalGroup(
            dsReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dsReportPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dsReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dsrDate)
                    .addComponent(dsrDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dsrButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        tsiPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tsiDate.setText("DD-MM-YYY:");

        tsiTheTop.setText("The top");

        tsiGoButton.setText("Go!");

        tsiDisplay.setColumns(20);
        tsiDisplay.setRows(5);
        jScrollPane3.setViewportView(tsiDisplay);

        tsiDateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tsiDateFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tsiPanelLayout = new javax.swing.GroupLayout(tsiPanel);
        tsiPanel.setLayout(tsiPanelLayout);
        tsiPanelLayout.setHorizontalGroup(
            tsiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tsiPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tsiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(tsiPanelLayout.createSequentialGroup()
                        .addComponent(tsiDate)
                        .addGap(109, 109, 109)
                        .addComponent(tsiDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(tsiTheTop)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tsiTheTopSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(tsiGoButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tsiPanelLayout.setVerticalGroup(
            tsiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tsiPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tsiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tsiDate)
                    .addComponent(tsiTheTop)
                    .addComponent(tsiTheTopSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tsiGoButton)
                    .addComponent(tsiDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout managerLayout = new javax.swing.GroupLayout(manager);
        manager.setLayout(managerLayout);
        managerLayout.setHorizontalGroup(
            managerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managerLayout.createSequentialGroup()
                .addGroup(managerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addItem)
                    .addComponent(dailySalesReport)
                    .addComponent(processDelivery)
                    .addComponent(topSellingItems)
                    .addGroup(managerLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(managerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(processDeliPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dsReportPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(managerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tsiPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(0, 29, Short.MAX_VALUE))
        );
        managerLayout.setVerticalGroup(
            managerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(managerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, Short.MAX_VALUE)
                .addComponent(processDelivery)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(processDeliPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dailySalesReport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dsReportPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(topSellingItems)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tsiPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        bigPane.addTab("Manager", manager);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bigPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bigPane, javax.swing.GroupLayout.PREFERRED_SIZE, 838, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    //total price that will be displayed
    int dollars = 0;

    private void addToCartMouseClicked(java.awt.event.MouseEvent evt) {                                       
        
        // -- {{ What happens when you press the "ADD TO CART" button }} --
    	
    	String preiid, prequantity;
        int iid;
        int quantity;
        
        preiid = enterItemUPC.getText();
        prequantity = enterItemQuan.getText();
        
        // Checks to see if one of the Item UPC or Quantity fields are blank
        if (preiid.length() == 0 || prequantity.length() == 0) {
        	// Error message
    		JOptionPane.showMessageDialog(null, "Both Item UPC and Quantity fields must be filled.",
    				"Inane error",
    				JOptionPane.ERROR_MESSAGE);
    		isValid.setText("Invalid");
        	
    		//All is well
        } else {

        	//grabs item_upc and item_quantity from the text field that the user enters.
        	iid = Integer.parseInt(enterItemUPC.getText());
        	quantity = Integer.parseInt(enterItemQuan.getText());

        	//the dollar value.  This is very rough, I just want to be sure that this works.
        	dollars += quantity * 1;
        	total.setText(String.valueOf(dollars));

        	// For debugging purposes:
        	System.out.println("you entered: " + iid + " " + quantity);
        }
        
    } 
    
    
    private void cancelOrder1MouseClicked(java.awt.event.MouseEvent evt) {                                          
        // -- {{ What happens when the first cancel order is clicked? }} --
    	// It should clear out all the text fields.
    	
    	String nothing;
    	nothing = "";
    	enterItemUPC.setText(String.valueOf(nothing));
    	enterItemQuan.setText(String.valueOf(nothing));
    	total.setText(String.valueOf(nothing));
    	fieldForCC.setText(String.valueOf(nothing));
    	fieldforExpiryDate.setText(String.valueOf(nothing));
    	
    	//very important to reset the total amount when the previous order has been cancelled.
    	dollars = 0;
    }  
    
    private void cancelOrderMouseClicked(java.awt.event.MouseEvent evt) {                                          
        // -- {{ What happens when the first cancel order is clicked? }} --
    	// It should clear out all the text fields.
    	
    	String nothing;
    	nothing = "";
    	enterItemUPC.setText(String.valueOf(nothing));
    	enterItemQuan.setText(String.valueOf(nothing));
    	total.setText(String.valueOf(nothing));
    	fieldForCC.setText(String.valueOf(nothing));
    	fieldforExpiryDate.setText(String.valueOf(nothing));  
    	
    	//very important to reset the total amount when the previous order has been cancelled.
    	dollars = 0;
    }  
    
    private void deletePreviousMouseClicked(java.awt.event.MouseEvent evt) {                                            
        // ADD THE DELETE PREVIOUS SQL STATEMENT HERE
    	//hesitant to add code here.  I don't think it was a requirement, maybe we can do it for the bonus?
    }

    private void cashOrCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashOrCardActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cashOrCardActionPerformed

    private void cashOrCardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cashOrCardMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cashOrCardMouseClicked

    private void processReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processReturnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_processReturnActionPerformed

    private void purchaseOnlineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_purchaseOnlineMouseClicked

        //make a pop up when Purchase Online is Clicked

    	String customerID;
    	String customerPassword;

    	// While customer ID's length is 0, keep prompting user to enter customer ID.
    	do {
    		customerID = JOptionPane.showInputDialog("Please Enter Your Customer ID: ");
    	} while (customerID.length() == 0);


    	JPasswordField passwordField = new JPasswordField();
    	// * is what you will see when user enters password.
    	passwordField.setEchoChar('*');

    	// While the customer's password length is 0, keep prompting the user to enter password.
      	do {
      		Object[] obj = {"Please enter the password:\n\n", passwordField};
      	Object stringArray[] = {"OK","Cancel"};
      	if (JOptionPane.showOptionDialog(null, obj, "Need password",
      	JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, stringArray, obj) == JOptionPane.YES_OPTION);

      	customerPassword = new String(passwordField.getPassword());
      	} while (customerPassword.length() == 0);


      	// for testing purposes:
      	System.out.println(customerID);
      	System.out.println(customerPassword);


    }//GEN-LAST:event_purchaseOnlineMouseClicked

    private void tsiDateFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tsiDateFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tsiDateFieldActionPerformed

    private void checkReceiptMouseClicked(java.awt.event.MouseEvent evt) {
        // -- {{ What happens when "Check Receipt" button is pressed }} --
    	
    	int rid;
    	String prerid;
    	prerid = fieldForReceiptID.getText();
    	
    	//checks to see if ReceiptID field is left empty.
    	if(prerid.length() == 0) {

    		JOptionPane.showMessageDialog(null, "Receipt field cannot be blank.",
    				"Inane error",
    				JOptionPane.ERROR_MESSAGE);
    		isValid.setText("Invalid");
    	} else {
    		//Not empty! Yay the clerk isn't retarded.    		
    		// rid is receipt ID, now we need a SQL statement to verify that the RID exists in the statement.
    		rid = Integer.parseInt(fieldForReceiptID.getText());
    	
    	
    	//if valid:
    	isValid.setText("Valid");
    	
    	//if not valid:
    	//isValid.setText("Not Valid");
    	
    	// For testing purposes:
    	System.out.println("Your receipt is " + rid + ".");
    	}
    }

    private void issueRefundMouseClicked(java.awt.event.MouseEvent evt) {
        // -- {{ What happens when the "Issue Refund" button is clicked }} --
    	
    	String preiid, prequantity;
    	int iid, quantity;
    	
    	preiid = returnIUPCField.getText();
    	prequantity = returnQuanField.getText();
    	
    	if (preiid.length() == 0 || prequantity.length() == 0) {
    		JOptionPane.showMessageDialog(null, " The Item UPC and Quantity fields cannot be blank.",
    				"Inane error",
    				JOptionPane.ERROR_MESSAGE);
    		isSuccessRet.setText("Invalid");
    		
    	} else {
    		// All the fields are filled in
    	iid = Integer.parseInt(returnIUPCField.getText());
    	quantity = Integer.parseInt(returnQuanField.getText());
    	
    	// For debugging purposes
    	System.out.println("You have returned: " + quantity + " of item upc: " + iid);
    	isSuccessRet.setText("Valid");
    	}
    	
    	
    }
    
    private void completePurchaseMouseClicked(java.awt.event.MouseEvent evt) {                                              
        // -- {{ What happens when the "Complete Purchase" button is pressed }} -- 
    	String boxValue;
    	String preCC, preExpDate;
    	int CC, ExpDate = 0;
    	boxValue = cashOrCard.getSelectedItem().toString();
    	
    	preCC = fieldForCC.getText();
    	preExpDate = fieldforExpiryDate.getText();
    	
    	if (boxValue == "Cash") {
    		// paying by Cash, but, is the clerk dumb enough to fill in CC fields?
    		if ( preCC.length() != 0 || preExpDate.length() != 0 ) {
    			JOptionPane.showMessageDialog(null, "You are paying by cash.  Leave the credit card fields blank.",
    					"Inane error",
    					JOptionPane.ERROR_MESSAGE);
    			isSuccessRet.setText("Invalid");

    		} else { 
    			// those fields are empty, now let's check to see if there is shit in the cart.
    			
    			// The grand total's field is empty, there is nothing, throw error.
    			if (total.getText().length() == 0) {
    				JOptionPane.showMessageDialog(null, "Seems to be no items in cart.",
    						"Inane error",
    						JOptionPane.ERROR_MESSAGE);
    				isSuccessRet.setText("Invalid");      		
    			} else {
    				//There is a grand total AND the credit card fields are NOT filled out.
    				//do stuff
    				
    				JOptionPane.showMessageDialog(null, "Thank you for your purchase by cash.");
    			}
    		}


    	} else {
    		//paying by CC then, did the clerk/jerk fill everything out?
    		if( preCC.length() == 0 || preExpDate.length() == 0) {
    			JOptionPane.showMessageDialog(null, " You are paying by credit card.  Please fill in credit card info.",
    					"Inane error",
    					JOptionPane.ERROR_MESSAGE);
    			isSuccessRet.setText("Invalid");

    		} else {
    			// The grand total's field is empty, there is nothing, throw error.
    			if (total.getText().length() == 0) {
    				JOptionPane.showMessageDialog(null, "Seems to be no items in cart.",
    						"Inane error",
    						JOptionPane.ERROR_MESSAGE);
    				isSuccessRet.setText("Invalid");      		
    			} else {
    				//There is a grand total AND the credit card fields are filled out.
    				
    				
    				//do stuff
    				
    				
    				//Sets the credit card number to CC (an INT) and expiry date to ExpDate (an INT)
    				CC = Integer.parseInt(fieldForCC.getText());
    				ExpDate = Integer.parseInt(fieldforExpiryDate.getText());
    				
    				JOptionPane.showMessageDialog(null, "Thank you for your purchase by credit card.  Now we can commit credit card fraud.");
    				
    				//For Testing Purposes:
    				System.out.println("Your CC #: " + CC + " and expiry date is: " + ExpDate);
    				   				
    				
    			}
    		}
    	}
    	    	
    	// For debugging purposes
    	System.out.println(boxValue);
    }  
    
    
   

    private void returnQuanFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnQuanFieldActionPerformed
        // TOdd your handling code here:
    }//GEN-LAST:event_returnQuanFieldActionPerformed
    
    
    // ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: //
    // :::::::! HERE BEGINS THE CODE FOR THE CUSTOMER TAB !::::::: //
    // ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: //
    
    private void createButtonMouseClicked(java.awt.event.MouseEvent evt) {                                          
        // -- {{ What happens when the "Create Button" is pressed? }} --
    	
    	String preName, preAddress, preID, prePhone, prePassword;
    	String name, address, phone, password;
    	int id;
    	
    	preName = cusName.getText();
    	preAddress = cusAddress.getText();
    	preID = cusID.getText();
    	prePhone = cusPhone.getText();
    	prePassword = cusPassword.getText();
    	
    	
    	// For name, aside from checking to see if the user inputted anything, I feel that we need to make sure in the SQL database, 
    	// that it has not been taken.  We shall expand this if statement a bit more.
    	if (preName.length() == 0) {
			JOptionPane.showMessageDialog(null, "Name cannot be blank.",
					"Inane error",
					JOptionPane.ERROR_MESSAGE);
			isSuccessRet.setText("Invalid");    		
    	}
    	if (preAddress.length() == 0) {
			JOptionPane.showMessageDialog(null, "Address cannot be blank.",
					"Inane error",
					JOptionPane.ERROR_MESSAGE);
			isSuccessRet.setText("Invalid");
    	}
    	if (preID.length() == 0) {
			JOptionPane.showMessageDialog(null, "ID cannot be blank.",
					"Inane error",
					JOptionPane.ERROR_MESSAGE);
			isSuccessRet.setText("Invalid");
    	}
    	if (prePhone.length() == 0) {
			JOptionPane.showMessageDialog(null, "Phone cannot be blank.",
					"Inane error",
					JOptionPane.ERROR_MESSAGE);
			isSuccessRet.setText("Invalid");
    	}
    	if (prePassword.length() == 0) {
			JOptionPane.showMessageDialog(null, "Password cannot be blank.",
					"Inane error",
					JOptionPane.ERROR_MESSAGE);
			isSuccessRet.setText("Invalid");
			
    	} 
    	
    	String idChecker=cusID.getText();
    	boolean incorrect = true;
    	while(incorrect){
    		try{Integer.parseInt(idChecker);incorrect = false;}
    		catch(NumberFormatException nfe){
    			idChecker=JOptionPane.showInputDialog("Invalid ID input. Please "+
    					"enter your ID as numbers: ");
    		}

    	}
    

    	// All fields are good to go:
    	name = preName;
    	address = preAddress;
    	id = Integer.parseInt(preID);
    	phone = prePhone;
    	password = prePassword;

    	// For testing purposes:

    	System.out.println ("Customer: " + name + " who lives at: " + address + "with the id: " + id + " and phone number: " + 
    			phone + " with password: " + password + "has been successfully created.");
    
    	
    }    
    
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Purchase;
    private javax.swing.JPanel Return;
    private javax.swing.JRadioButton addItem;
    private javax.swing.JButton addToCart;
    private javax.swing.JButton addToInventory;
    private javax.swing.JLabel address;
    private javax.swing.JTabbedPane bigPane;
    private javax.swing.ButtonGroup buttonGroupClerk;
    private javax.swing.ButtonGroup buttonGroupCustomer;
    private javax.swing.ButtonGroup buttonGroupManager;
    private javax.swing.JButton cancelOrder;
    private javax.swing.JButton cancelOrder1;
    private javax.swing.JComboBox cashOrCard;
    private javax.swing.JLabel ccNumber;
    private javax.swing.JButton checkReceipt;
    private javax.swing.JPanel clerk;
    private javax.swing.JButton completePurchase;
    private javax.swing.JButton createButton;
    private javax.swing.JTextField cusAddress;
    private javax.swing.JTextField cusID;
    private javax.swing.JTextField cusName;
    private javax.swing.JTextField cusPassword;
    private javax.swing.JTextField cusPhone;
    private javax.swing.JPanel customer;
    private javax.swing.JRadioButton dailySalesReport;
    private javax.swing.JButton deletePrevious;
    private javax.swing.JPanel dsReportPanel;
    private javax.swing.JButton dsrButton;
    private javax.swing.JLabel dsrDate;
    private javax.swing.JTextField dsrDateField;
    private javax.swing.JTextArea dsrDisplay;
    private javax.swing.JTextField enterItemQuan;
    private javax.swing.JTextField enterItemUPC;
    private javax.swing.JLabel enterReceiptID;
    private javax.swing.JLabel expiryDate;
    private javax.swing.JTextField fieldForCC;
    private javax.swing.JTextField fieldForReceiptID;
    private javax.swing.JTextField fieldforExpiryDate;
    private javax.swing.JLabel id;
    private javax.swing.JTextField isSuccessRet;
    private javax.swing.JTextField isValid;
    private javax.swing.JButton issueRefund;
    private javax.swing.JPanel itemInput;
    private javax.swing.JLabel itemUPC;
    private javax.swing.JTextField itemUPCInput;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel manager;
    private javax.swing.JPanel managerPanel;
    private javax.swing.JLabel mngrItemUPC;
    private javax.swing.JLabel mngrPrice;
    private javax.swing.JLabel mngrQuant;
    private javax.swing.JLabel name;
    private javax.swing.JTextField orderID;
    private javax.swing.JLabel password;
    private javax.swing.JLabel paymentType;
    private javax.swing.JLabel phone;
    private javax.swing.JTextField priceInput;
    private javax.swing.JLabel procesMonth;
    private javax.swing.JButton processButton;
    private javax.swing.JLabel processDay;
    private javax.swing.JSpinner processDaySpinner;
    private javax.swing.JPanel processDeliPanel;
    private javax.swing.JRadioButton processDelivery;
    private javax.swing.JSpinner processMonthSpinner;
    private javax.swing.JLabel processOrderID;
    private javax.swing.JRadioButton processPurchase;
    private javax.swing.JRadioButton processReturn;
    private javax.swing.JRadioButton purchaseOnline;
    private javax.swing.JTextField quantityInput;
    private javax.swing.JRadioButton registration;
    private javax.swing.JPanel registrationPanel;
    private javax.swing.JTextField returnIUPCField;
    private javax.swing.JLabel returnItemUPC;
    private javax.swing.JTextField returnQuanField;
    private javax.swing.JLabel returnQuantity;
    private javax.swing.JRadioButton topSellingItems;
    private javax.swing.JTextField total;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JLabel tsiDate;
    private javax.swing.JTextField tsiDateField;
    private javax.swing.JTextArea tsiDisplay;
    private javax.swing.JButton tsiGoButton;
    private javax.swing.JPanel tsiPanel;
    private javax.swing.JLabel tsiTheTop;
    private javax.swing.JSpinner tsiTheTopSpinner;
    // End of variables declaration//GEN-END:variables
}
